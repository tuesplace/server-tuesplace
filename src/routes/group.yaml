paths:
  /groups/:
    get:
      security:
        - bearerAuth: []
      tags:
        - Group
      name: Get All Groups
      produces:
        - application/json
      consumes:
        - application/json
      summary: Get All Groups
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          description: Page Number of Results
          nullable: true
        - name: limit
          in: query
          schema:
            type: integer
          description: Number of Results per Page
          nullable: true
      responses:
        200:
          $ref: "#/components/responses/Groups"
        400:
          description: Comment Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/errors/ResourcePropInvalid"
                  - $ref: "#/components/errors/ResourcePropSurpassMaxLength"
                discriminator: errors

        401:
          $ref: "#/components/responses/GroupPermission"
        404:
          $ref: "#/components/responses/ResourceNotFound"
        500:
          $ref: "#/components/responses/ServerError"
    post:
      security:
        - bearerAuth: []
      tags:
        - Group
      name: Create Group
      produces:
        - application/json
      consumes:
        - application/json
      summary: Create a Group
      parameters:
        - name: responseBehavior
          in: query
          schema:
            type: string
            enum: ["id", "doc", "none"]
          nullable: true
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
                example: 9В - Руски
              type:
                type: string
                enum: ["chat", "subject"]
              classes:
                type: array
                items:
                  type: string
                  format: class
            required:
              - name
              - teachers
              - classes
      responses:
        201:
          description: Created Group
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - $ref: "#/components/objects/Group"
                  - $ref: "#/components/objects/IdResponse"
                  - $ref: "#/components/objects/EmptyResponse"
        400:
          description: Group Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/errors/ResourcePropInvalid"
                  - $ref: "#/components/errors/ResourceNotProvided"
                discriminator: errors
        401:
          $ref: "#/components/responses/GroupPermission"
        404:
          $ref: "#/components/responses/ResourceNotFound"
        500:
          $ref: "#/components/responses/ServerError"

  /groups/{groupId}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Group
      name: Get Group
      produces:
        - application/json
      consumes:
        - application/json
      summary: Get Group Information
      parameters:
        - name: groupId
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            format: ObjectId
      responses:
        200:
          $ref: "#/components/responses/Group"
        400:
          $ref: "#/components/responses/ResourceNotProvided"
        401:
          $ref: "#/components/responses/GroupPermission"
        404:
          $ref: "#/components/responses/ResourceNotFound"
        500:
          $ref: "#/components/responses/ServerError"
    put:
      security:
        - bearerAuth: []
      tags:
        - Group
      name: Edit Group
      produces:
        - application/json
      consumes:
        - application/json
      summary: Edits an already existing Group
      parameters:
        - name: groupId
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            format: ObjectId
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
                example: 9В - Руски
              type:
                type: string
                enum: ["chat", "subject"]
              classes:
                type: array
                items:
                  type: string
                  format: class
      responses:
        204:
          $ref: "#/components/responses/EmptyResponse"
        400:
          description: Group Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/errors/ResourcePropInvalid"
                  - $ref: "#/components/errors/ResourceNotProvided"
                discriminator: errors
        401:
          $ref: "#/components/responses/GroupPermission"
        404:
          $ref: "#/components/responses/ResourceNotFound"
        500:
          $ref: "#/components/responses/ServerError"
    delete:
      security:
        - bearerAuth: []
      tags:
        - Group
      name: Delete Group
      produces:
        - application/json
      consumes:
        - application/json
      summary: Permanently deletes an already existing Group
      parameters:
        - name: groupId
          in: path
          description: Group ID
          required: true
          schema:
            type: string
            format: ObjectId
      responses:
        204:
          description: Group Deleted Successfully
        400:
          description: Group Validation Error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/errors/ResourcePropInvalid"
                  - $ref: "#/components/errors/ResourceNotProvided"
                discriminator: errors
        401:
          $ref: "#/components/responses/GroupPermission"
        404:
          $ref: "#/components/responses/ResourceNotFound"
        500:
          $ref: "#/components/responses/ServerError"
  /groups/{groupId}/assets:
    put:
      security:
        - bearerAuth: []
      tags:
        - Group
      name: Edit Group Assets
      summary: Changes a Group's Assets
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - name: mode
          in: query
          description: Asset Replacement Mode
          required: false
          schema:
            type: string

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                coverPhoto:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        204:
          $ref: "#/components/responses/EmptyResponse"
        404:
          $ref: "#/components/responses/ResourceNotFound"
        500:
          $ref: "#/components/responses/ServerError"
