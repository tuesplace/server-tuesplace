components:
  responses:
    ServerError:
      description: Server Returned Error Unexpectedly
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Validation:
      description: Validation of request body failed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RESTError"
    ResourceNotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResourceNotFound"
  schemas:
    AuthObject:
      type: object
      properties:
        accessToken:
          type: string
          description: JWT Access Token
          example: eyYawdwadaadadawdaxsadawdawdasd
        refreshToken:
          type: string
          description: JWT Refresh Token
          example: eyYawdwadaadadawdaxsadawdawdasd
        userId:
          type: string
          description: User Id
          example: 6180fc001jn129c91291j

    ErrorsItem:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
      required:
        - type
        - message
    Error:
      type: object
      properties:
        name:
          type: string
          example: Error
        success:
          type: boolean
          example: false
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ErrorsItem"
      required:
        - name
        - success
        - status
        - errors
    RESTError:
      allOf:
        - $ref: "#/components/schemas/Error"
        - type: object
          properties:
            name:
              type: string
              example: RESTError
            code:
              type: integer
          required:
            - code
            - controller
    EmailInvalid:
      allOf:
        - $ref: "#/components/schemas/RESTError"
        - type: object
          properties:
            code:
              example: 400
            errors:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    example: EmailInvalid
                  message:
                    type: string
                    example: "Email must be a valid string"
    PasswordInvalid:
      allOf:
        - $ref: "#/components/schemas/RESTError"
        - type: object
          properties:
            code:
              example: 401
            errors:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    example: PasswordInvalid
                  message:
                    type: string
                    example: "Password must be a valid string"
    ResourceNotFound:
      allOf:
        - $ref: "#/components/schemas/RESTError"
        - type: object
          properties:
            code:
              example: 404
            errors:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    example: ResourceNotFound
                  message:
                    type: string
                    example: Resource of type {{type}} not found
    WrongPassword:
      allOf:
        - $ref: "#/components/schemas/RESTError"
        - type: object
          properties:
            code:
              example: 401
            errors:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    example: WrongPassword
                  message:
                    type: string
                    example: "Password is incorrect"
